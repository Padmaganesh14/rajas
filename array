#include <iostream>
using namespace std;

void traverse(int arr[], int size) {
    cout << "Array elements: ";
    for (int i = 0; i < size; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;
}

void insert(int arr[], int& size, int capacity, int element, int position) {
    if (size == capacity) {
        cout << "Array is full. Cannot insert element.\n";
        return;
    }
    if (position < 0 || position > size) {
        cout << "Invalid position!\n";
        return;
    }

    // Shift elements to right to create space
    for (int i = size - 1; i >= position; i--) {
        arr[i + 1] = arr[i];
    }
    arr[position] = element;
    size++;
    cout << "Element inserted.\n";
}

void deletion(int arr[], int& size, int position) {
    if (size == 0) {
        cout << "Array is empty. Nothing to delete.\n";
        return;
    }
    if (position < 0 || position >= size) {
        cout << "Invalid position!\n";
        return;
    }

    // Shift elements to left to fill the gap
    for (int i = position; i < size - 1; i++) {
        arr[i] = arr[i + 1];
    }
    size--;
    cout << "Element deleted.\n";
}

int main() {
    int capacity = 10;
    int arr[10];
    int size = 0;

    // Sample usage
    insert(arr, size, capacity, 5, 0);   // Insert 5 at position 0
    insert(arr, size, capacity, 10, 1);  // Insert 10 at position 1
    insert(arr, size, capacity, 15, 2);  // Insert 15 at position 2
    traverse(arr, size);

    deletion(arr, size, 1);  // Delete element at position 1 (value 10)
    traverse(arr, size);

    insert(arr, size, capacity, 20, 1);  // Insert 20 at position 1
    traverse(arr, size);

    return 0;
}
